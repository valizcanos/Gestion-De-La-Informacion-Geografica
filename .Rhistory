knitr::opts_chunk$set(echo = TRUE)
ColPuntos["Hombres"]
library(ggplot2)
meuse
demo()
demo(package = .packages(all.available = TRUE))
demo(meuse)
demo(meuse, ask = FALSE, echo = FALSE)
islands
Arith
USArrests
CO2
USArrests
runif(1,0,1)
sample(1:6,10)
sample(1:6,1)
sample(1:6,1)
sample(1:6,1)
sample(1:6,1)
sample(1:6,1)
sample(1:6,1)
sample(1:6,1)
for(i in 1:10){sample(1:6,1)}
for(i in 1:10){print(sample(1:6,1))}
for(i in 1:10){plot(sample(1:6,1))}
for(i in 1:10){plot(sample(1:6,1), add=TRUE)}
for(i in 1:19){print(sample(1:6,1))}
[1]
c(1)
matrix(NA,nrow = 10, ncol = 1)
datos= matrix(NA,nrow = 10, ncol = 1)
for(i in 1:10){datos[i]= (sample(1:6,1))}
datos
plot(datos)
datos= matrix(NA,nrow = 1000, ncol = 1)
for(i in 1:1000){datos[i]= (sample(1:6,1))}
plot(datos)
hist(datos)
datos= matrix(NA,nrow = 10000, ncol = 1)
for(i in 1:10000){datos[i]= (sample(1:6,1))}
hist(datos)
plot(runif(1,0,1))
plot(runif(2,0,1))
plot(runif(4,0,1))
plot(runif(8,0,1))
plot(runif(20,0,1))
plot(runif(200,0,1))
hist(runif(200,0,1))
hist(runif(2000,0,1))
hist(runif(10000,0,1))
hist(rnorm(10,0,1)
)
hist(rnorm(10,0,1))
hist(rnorm(10,0,1))
hist(rnorm(100,0,1))
hist(rnorm(1000,0,1))
hist(rnorm(10000,0,1))
hist(rnorm(100000,0,1))
hist(rnorm(100000,0,1))
hist(rnorm(100000,0,1))
getwd()
getwd()
read.csv("parametrosRioCauca.csv", sep=",", dec=".")
setwd("D:/DOCS/ASIGNATURAS IMPARTIDAS/GESTIÓN DE LA INFORMACIÓN GEOGRÁFICA/Gestion-De-La-Informacion-Geografica")
read.csv("parametrosRioCauca.csv", sep=",", dec=".")
Parametros = read.csv("parametrosRioCauca.csv", sep=",", dec=".")
DatosRio = read.csv("parametrosRioCauca.csv", sep=",", dec=".")
Parametros = c("DBO5", "OD", "Coliformes F", "Coliformes T", "pH", "DT", "SD", "SS",
"Cl", "Conductividad", "AT", "Grasas y Aceites", "N-NO3", "N-NH3",
"PO4", "SAAM", "Color", "Turbiedad")
Unidad = c("mg/L", "mg/L", "NMP/100mL", "NMP/100mL", "SU", "mg/L CaCO3", "mg/L",
"mg/L", "mg/L", "umhos/cm", "mg/L CaCO3", "mg/L", "mg/L", "mg/L",
"mg/L", "mg/L", "UPC", "UNT")
Clasificacion = c("M. Orgánica","M. Orgánica","Bacteriológico", "Bacteriológico",
"M. Iónico","M. Iónico","M. Suspendido","M. Suspendido",
"M. Iónico","M. Iónico","M. Iónico","M. Suspendido",
"Nutrientes", "Nutrientes", "Nutrientes",
"Nutrientes", "M. Suspendido",
"M. Suspendido")
Pesos = c(5,5,4,3,1,1,0.5,1,0.5,2,1,2,2,2,2,3,1,0.5)
Wi = data.frame(Parametros,Unidad,Clasificacion,Pesos)
View(Wi)
View(DatosRio)
View(DatosRio)
View(DatosRio)
DatosRio = read.csv("parametrosRioCauca.csv", sep=",", dec=".")
DatosRio = read.csv("parametrosRioCauca.csv", sep=",", dec=".", header = T)
DatosRio = read.csv("parametrosRioCauca.csv",  header = T)
View(DatosRio)
EcuacionIndex_pH = function(N_observaciones, loc_pH, datos){
pH_indice = matrix(NA, nrow = N_observaciones, ncol = 1)
for(i in 1:N_observaciones){
if(datos[i,loc_pH]<6.7){
pH_indice[i,1]= 10^(0.2335*datos[i,loc_pH]+0.44)
}else if(datos[i,loc_pH]>7.3){
pH_indice[i,1]= 10^(4.22-0.293*datos[i,loc_pH])
}else{
pH_indice[i,1] = 100
}
}
return(pH_indice)
}
View(DatosRio)
View(DatosRio)
View(Wi)
View(DatosRio)
DatosRio$pHIndex = EcuacionIndex_pH(7, 8, DatosRio)
DatosRio$ColorIndex = 123*DatosRio$Color^(-0.295)
DatosRio = read.csv("parametrosRioCauca.csv",  header = T)
Parametros = c("DBO5", "OD", "Coliformes F", "Coliformes T", "pH", "DT", "SD", "SS",
"Cl", "Conductividad", "AT", "Grasas y Aceites", "N-NO3", "N-NH3",
"PO4", "SAAM", "Color", "Turbiedad")
Unidad = c("mg/L", "mg/L", "NMP/100mL", "NMP/100mL", "SU", "mg/L CaCO3", "mg/L",
"mg/L", "mg/L", "umhos/cm", "mg/L CaCO3", "mg/L", "mg/L", "mg/L",
"mg/L", "mg/L", "UPC", "UNT")
Clasificacion = c("M. Orgánica","M. Orgánica","Bacteriológico", "Bacteriológico",
"M. Iónico","M. Iónico","M. Suspendido","M. Suspendido",
"M. Iónico","M. Iónico","M. Iónico","M. Suspendido",
"Nutrientes", "Nutrientes", "Nutrientes",
"Nutrientes", "M. Suspendido",
"M. Suspendido")
Pesos = c(5,5,4,3,1,1,0.5,1,0.5,2,1,2,2,2,2,3,1,0.5)
Wi = data.frame(Parametros,Unidad,Clasificacion,Pesos)
EcuacionIndex_pH = function(N_observaciones, loc_pH, datos){
pH_indice = matrix(NA, nrow = N_observaciones, ncol = 1)
for(i in 1:N_observaciones){
if(datos[i,loc_pH]<6.7){
pH_indice[i,1]= 10^(0.2335*datos[i,loc_pH]+0.44)
}else if(datos[i,loc_pH]>7.3){
pH_indice[i,1]= 10^(4.22-0.293*datos[i,loc_pH])
}else{
pH_indice[i,1] = 100
}
}
return(pH_indice)
}
View(DatosRio)
View(DatosRio)
View(DatosRio)
View(DatosRio)
View(DatosRio)
DatosRio$pHIndex = EcuacionIndex_pH(7, 9, DatosRio) #Creamos una columna con los indices para pH
DatosRio$ColorIndex = 123*DatosRio$Color^(-0.295)
